{
	"info": {
		"_postman_id": "9b0eae05-03da-4738-a1e9-db1cfca07615",
		"name": "Employee CRUD E2E Test",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "26345068"
	},
	"item": [
		{
			"name": "Create a new employee",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//Assertion 2-Response value check\r",
							"pm.test(\"Check if the response contains the expected name.\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"Olive\");\r",
							"\r",
							"});\r",
							"pm.test(\"Check if the response contains the expected salary.\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"999\");\r",
							"});\r",
							"\r",
							";\r",
							"pm.test(\"Check if the response contains the expected age\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"235\");\r",
							"});\r",
							"\r",
							"//Assertion 2 Response value check\r",
							"pm.test(\"Check key-value pairs in the response.\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    //Name check\r",
							"    pm.expect(jsonData.data.name).to.eql(\"Olive\");\r",
							"    //Salary check\r",
							"     pm.expect(jsonData.data.salary).to.eql(\"999\");\r",
							"     //Age check\r",
							"      pm.expect(jsonData.data.age).to.eql(\"235\");\r",
							"       //Setting an enviroment variable\r",
							"    pm.environment.set(\"employeeID\",jsonData.data.id );\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Olive\",\r\n    \"salary\": \"999\",\r\n    \"age\": \"235\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://dummy.restapiexample.com/api/v1/create",
					"protocol": "https",
					"host": [
						"dummy",
						"restapiexample",
						"com"
					],
					"path": [
						"api",
						"v1",
						"create"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update an existing employee reord",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//Assertion 1- Status code check\r",
							"pm.test(\"Status code check\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"//Assertion 2- Response value check\r",
							"pm.test(\"Check if the response contains expected name\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"Olive\");\r",
							"});\r",
							"pm.test(\"Check if the response contains expected salary\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"999\");\r",
							"});\r",
							"pm.test(\"Check if the response contains expected age\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"28\");\r",
							"});\r",
							"\r",
							"\r",
							"//Assertion 2- Response value check\r",
							"pm.test(\"Check key-value pairs in the response\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    //Name check\r",
							"    pm.expect(jsonData.data.name).to.eql(\"Olive\");\r",
							"    //Salary check\r",
							"    pm.expect(jsonData.data.salary).to.eql(\"999\");\r",
							"    //Age check\r",
							"    pm.expect(jsonData.data.age).to.eql(\"28\");\r",
							"   \r",
							"\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Olive\",\r\n    \"salary\": \"999\",\r\n    \"age\": \"28\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://dummy.restapiexample.com/api/v1/update/{{employeeID}}",
					"protocol": "https",
					"host": [
						"dummy",
						"restapiexample",
						"com"
					],
					"path": [
						"api",
						"v1",
						"update",
						"{{employeeID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete an existing employee record",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//Status code check\r",
							"pm.test(\"Status code check\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"//Assertion 2- Response value check\r",
							"pm.test(\"Check key-value pairs in the response.\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    //Status check\r",
							"    pm.expect(jsonData.status).to.eql(\"success\");\r",
							"    //Data check\r",
							"    pm.expect(jsonData.data).to.eql(pm.environment.get(\"employeeID\").toString());\r",
							"    //Message check\r",
							"    pm.expect(jsonData.message).to.eql(\"Successfully! Record has been deleted\");\r",
							"   \r",
							"  \r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "https://dummy.restapiexample.com/api/v1/delete/{{employeeID}}",
					"protocol": "https",
					"host": [
						"dummy",
						"restapiexample",
						"com"
					],
					"path": [
						"api",
						"v1",
						"delete",
						"{{employeeID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create a new employee record",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//Response value check\r",
							"pm.test(\"Check key-value pairs in the response.\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    //Name check\r",
							"    pm.expect(jsonData.data.name).to.eql(\"Poppy\");\r",
							"    //Salary check\r",
							"     pm.expect(jsonData.data.salary).to.eql(\"1000\");\r",
							"     //Age check\r",
							"     pm.expect(jsonData.data.age).to.eql(\"32\");\r",
							"    //Setting an enviroment variable\r",
							"    pm.environment.set(\"employeeName\", jsonData.data.name);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Poppy\",\r\n    \"salary\": \"1000\",\r\n    \"age\": \"32\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://dummy.restapiexample.com/api/v1/create",
					"protocol": "https",
					"host": [
						"dummy",
						"restapiexample",
						"com"
					],
					"path": [
						"api",
						"v1",
						"create"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update an existing employee record",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//Status code check\r",
							"pm.test(\"Status code check.\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"//Assertion 2- Response value check\r",
							"pm.test(\"Check key-value pairs in the response.\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    //Name check\r",
							"    pm.expect(jsonData.data.name).to.eql(\"Poppy\");\r",
							"    //Salary check\r",
							"    pm.expect(jsonData.data.salary).to.eql(\"10000\");\r",
							"    //Age check\r",
							"    pm.expect(jsonData.data.age).to.eql(\"100\");\r",
							"   \r",
							"  \r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Poppy\",\r\n    \"salary\": \"10000\",\r\n    \"age\": \"100\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://dummy.restapiexample.com/api/v1/update/{{employeeName}}",
					"protocol": "https",
					"host": [
						"dummy",
						"restapiexample",
						"com"
					],
					"path": [
						"api",
						"v1",
						"update",
						"{{employeeName}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete an existing employee record",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//Status code check\r",
							"pm.test(\"Status code check\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"//Assertion 2- Response value check\r",
							"pm.test(\"Check key-value pairs in the response.\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    //Status check\r",
							"    pm.expect(jsonData.status).to.eql(\"success\");\r",
							"    //Data check\r",
							"    pm.expect(jsonData.data).to.eql(pm.environment.get(\"employeeName\"));\r",
							"    //Message check\r",
							"    pm.expect(jsonData.message).to.eql(\"Successfully! Record has been deleted\");\r",
							"   \r",
							"\r",
							"\r",
							"    \r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "https://dummy.restapiexample.com/api/v1/delete/{{employeeName}}",
					"protocol": "https",
					"host": [
						"dummy",
						"restapiexample",
						"com"
					],
					"path": [
						"api",
						"v1",
						"delete",
						"{{employeeName}}"
					]
				}
			},
			"response": []
		}
	]
}